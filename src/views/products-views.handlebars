<!-- Layout principal -->
<div style="display: flex; justify-content: space-between; align-items: center; padding: 10px;">
  <h1>{{title}}</h1>
  <div style="display: flex; align-items: center; margin-left: auto;">
    {{#if name}}
    <p style="color: #F8A126; margin-right: 10px; margin-bottom: 0;">¡Bienvenido, {{name}}!</p>
    {{/if}}
    <form action="/api/logout" method="get">
      <button type="submit" class="btn btn-success" style="margin-bottom: 10px;">Cerrar Sesión</button>
    </form>
    <!-- Icono de carrito y cantidad -->
    {{#if cart}}
    <form id="cartForm" action="/cart/{{cart}}" method="get">
      <button type="submit" class="btn btn-info" style="margin-bottom: 10px; margin-left: 10px;">
        <i class="fas fa-shopping-cart"></i> <span id="cartQuantity">{{cart.totalQuantity}}</span>
      </button>
    </form>
    {{/if}}
  </div>
</div>

<!-- Listado de productos -->
<div class="row">
  {{#each products}}
  <div class="col-md-6">
    <div class="card" style="margin-bottom: 20px;">
      <img src="{{this.image}}" class="card-img-top" alt="{{this.title}} Image"
        style="max-height: 150px; object-fit: contain; width: 100%;">
      <div class="card-body">
        <h5 class="card-title">{{this.title}}</h5>
        <p class="card-text">Descripción: {{this.description}}</p>
        <p class="card-text">Precio: ${{this.price}}</p>
        {{#if this.category}}
        <p class="card-text">Categoría: {{this.category.name}}</p>
        {{/if}}
        <p class="card-text">Código: {{this.code}}</p>
        <p class="card-text">Stock: {{this.stock}}</p>
        <!-- Formulario para agregar al carrito -->
        <form id="addToCartForm_{{this._id}}" action="/cart/{{cart}}/product/{{this._id}}" method="post">
          <button type="submit" class="btn btn-primary addToCartBtn" data-product-id="{{this._id}}">
            <i class="fas fa-shopping-cart"></i> Agregar al Carrito
          </button>

        </form>
      </div>
    </div>
  </div>
  {{/each}}
</div>

<nav aria-label="Paginacion">
  <ul class="pagination">
    {{#if hasPrevPage}}
    <li class="page-item">
      <a class="page-link"
        href="/products-views?limit={{limit}}&page={{prevPage}}&sort={{sort}}&category={{category}}">Ant</a>
    </li>
    {{/if}}

    <li class="page-item">
      <a class="page-link" href="/products-views?limit={{limit}}&page=1&sort={{sort}}&category={{category}}">Pg 1</a>
    </li>

    {{#each pages}}
    <li class="page-item {{#if (isEqual this ../page)}}active{{/if}}">
      <a class="page-link"
        href="/products-views?limit={{limit}}&page={{this}}&sort={{sort}}&category={{category}}">{{this}}</a>
    </li>
    {{/each}}

    <li class="page-item">
      <a class="page-link" href="#">Pg {{page}} de {{totalPages}}</a>
    </li>

    {{#if hasNextPage}}
    <li class="page-item">
      <a class="page-link"
        href="/products-views?limit={{limit}}&page={{nextPage}}&sort={{sort}}&category={{category}}">Sig</a>
    </li>
    {{/if}}
  </ul>
</nav>

<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<script>
document.addEventListener('DOMContentLoaded', function () {
    // Obtener el ID del carrito del formulario
    const cartId = document.getElementById('cartForm').getAttribute('action').split('/').pop();

    // Actualizar la cantidad cuando se carga la página
    updateCartQuantity(cartId);

    // Agregar el evento de clic al formulario del carrito
    document.getElementById('cartForm').addEventListener('submit', function (event) {
      event.preventDefault(); // Evitar que el formulario se envíe directamente
      redirectToCart('{{userId}}');
    });

  function redirectToCart(userId) {
    // Realizar una acción adicional si es necesario antes de redirigir
    // Por ejemplo, puedes realizar algún trabajo en el cliente antes de ir al carrito

    // Redirigir al carrito
    window.location.href = `http://localhost:8080/cart/${userId}`;
  }
})
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.addToCartBtn').forEach(button => {
      button.addEventListener('click', function (event) {
        event.preventDefault();
        const productId = this.getAttribute('data-product-id');
        const cartId = document.getElementById('cartForm').getAttribute('action').split('/').pop();

        Swal.fire({
          title: "¿Agregar al carrito?",
          text: "¿Deseas agregar este producto al carrito?",
          icon: "question",
          showCancelButton: true,
          confirmButtonColor: "#F8A126",
          cancelButtonColor: "#d33",
          confirmButtonText: "Sí, agregar al carrito",
          cancelButtonText: "Cancelar",
        }).then((result) => {
          if (result.isConfirmed) {
            axios.post(`/cart/${cartId}/product/${productId}`)
              .then(response => {
                Swal.fire("Agregado al carrito", "El producto se ha agregado al carrito correctamente.", "success");
                // Actualizar la cantidad en el icono del carrito
                updateCartQuantity(cartId);
              })
              .catch(error => {
                console.error(error);
                Swal.fire("Error", "Hubo un problema al agregar el producto al carrito.", "error");
              });
          }
        });
      });
    });
  });
</script>

<script>
  function updateCartQuantity(cartId) {
    // Realizar la solicitud al servidor para obtener la cantidad del carrito
    axios.get(`/cart/quantity/${cartId}`)
      .then(response => {
        const cartQuantityFromServer = response.data.quantity;

        // Actualizar el contenido del elemento con el id "cartQuantity"
        document.getElementById('cartQuantity').textContent = cartQuantityFromServer.toString();
      })
      .catch(error => {
        console.error('Error al obtener la cantidad del carrito:', error);
      });
  }
</script>